{"expireTime":9007200839200138000,"key":"gatsby-plugin-mdx-entire-payload-181f7f44e927a2f2413591fbf6e1e07d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/jasonclark/Source/react-table/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":115,"offset":116},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":118},"end":{"line":5,"column":29,"offset":146},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using TypeScript with React-Table","position":{"start":{"line":7,"column":3,"offset":150},"end":{"line":7,"column":36,"offset":183},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":148},"end":{"line":7,"column":36,"offset":183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Types for React Table are maintained externally by the Typescript community and are located at ","position":{"start":{"line":9,"column":1,"offset":185},"end":{"line":9,"column":96,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-table","children":[{"type":"text","value":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-table","position":{"start":{"line":9,"column":96,"offset":280},"end":{"line":9,"column":176,"offset":360},"indent":[]}}],"position":{"start":{"line":9,"column":96,"offset":280},"end":{"line":9,"column":176,"offset":360},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":9,"column":176,"offset":360},"end":{"line":9,"column":177,"offset":361},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":185},"end":{"line":9,"column":177,"offset":361},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because React Table is not written in Typescript and the types are not maintained by the core team, there are no guarantees around the types always being up to date or working perfectly. If this is an issue for you, please contribute to the community types and discuss solutions there.","position":{"start":{"line":11,"column":1,"offset":363},"end":{"line":11,"column":286,"offset":648},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":363},"end":{"line":11,"column":286,"offset":648},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":14,"column":1,"offset":651},"end":{"line":14,"column":31,"offset":681},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":14,"column":31,"offset":681}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/jasonclark/Source/react-table/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-typescript-with-react-table\"\n    }}>{`Using TypeScript with React-Table`}</h1>\n    <p>{`Types for React Table are maintained externally by the Typescript community and are located at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-table\"\n      }}>{`https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-table`}</a>{`.`}</p>\n    <p>{`Because React Table is not written in Typescript and the types are not maintained by the core team, there are no guarantees around the types always being up to date or working perfectly. If this is an issue for you, please contribute to the community types and discuss solutions there.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}